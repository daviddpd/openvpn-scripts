## OpenVPN Configuration for pushing dynamic routes to client
## from the Kernel's route table.

# Your servers public IP that clients connect on.
local 192.168.2.1

# Server mode and Subnet Topology 
mode server
tls-server
topology subnet

# OpenVPN will take .1 of this range, 
# and distribute IPs in this mask range.  This is a /21
# there is about ~500 IPs in this range, probably good
# to set max clients below that.
# NOTE: FIXME/BUG: OpenVPN does not seem to add the route
# to the routing table, when an IP from this range is on a local
# interface. 
server 10.231.8.0 255.255.248.0
max-clients 420

# verbosity at 3, probably good to hold here so the SysAdmin
# can debug reported issues.
verb 3

# Use Layer 3 Tunneling
dev tun

# Write a pidfile.
writepid /var/run/openvpn_server1.pid

# Needed to run external scripts.
script-security 3

# Run as a daemon.
daemon

# Lower pings and keep alive - This will drop the UDP session 50 seconds 
# after a client disconnects.
keepalive 5 15
ping-timer-rem

# 
persist-tun
persist-key

# Set the list of AES-NI Accelerated Chipers  
cipher AES-128-CBC
ncp-ciphers AES-256-GCM:AES-192-GCM:AES-128-GCM:AES-256-CBC:AES-192-CBC:AES-128-CBC

# SHA1 auth
auth SHA1

# The Magic for dynamic Routes and Config
# this needs to be a full path.
client-connect "openvpn-scripts/ovpn.pl --connect "
client-disconnect "openvpn-scripts/ovpn.pl --disconnect "

# Auth against LDAP ... or seriously anything else.
# username/password as those lower case environmental variables. 
auth-user-pass-verify "openvpn-scripts/ldapauth.pl --uri=ldaps://ldap.example.com:636 --binddn=uid=admin --basedn=ou=people,dc=example,dc=com --bindpw=xxx" via-env
verify-client-cert none
username-as-common-name

# These may be in conflict.  Duplicate CN allows the user to login
# multiple times.  Pool persists allows for track IPs to clients,
# those keyed by CN.
duplicate-cn
ifconfig-pool-persist /var/db/openvpn/ifconfig-pool-persist 600

lport 1194
management /var/run/openvpn/server1.sock unix

# Set extended TAP-Win32 TCP/IP properties (Windows-Specific)
push "dhcp-option DOMAIN example.com"
push "dhcp-option DNS 10.a.b.c"
# Run ipconfig /flushdns and ipconfig /registerdns on connection (Windows-Specific)
push "register-dns"

# From Manpage: 
#  Note that if --dhcp-option is pushed via --push to a non-windows
#  client, the option will be saved in the client's environment
#  before the up script is called, under the name
#  "foreign_option_{n}".

# So, platforms other than Windows, need to leverage scripts 
# for --up and --down to correctly set the resolvers.
# macOS Tunnelblick has the ability to append this to the config
# via gui options.  Unix/Linux platforms may need to explicitly
# define the scripts in the client config.

# C2C - doesn't seem to be needed, though might be helpful.
# May screw with the routes.
# client-to-client

# Standard Certificate and TLS auth Setup
# DHparm creation: openssl dhparam -out dh-parameters.2048 2048
ca /usr/local/etc/openvpn/server1.ca
cert /usr/local/etc/openvpn/server1.cert
key /usr/local/etc/openvpn/server1.key
dh /usr/local/etc/openvpn/dh-parameters.2048
tls-auth /usr/local/etc/openvpn/server1.tls-auth 0

# 2.4.x -> 2.5.x Need to move to Compress
#compress lz4
comp-lzo yes

# Preserve most recently authenticated remote IP address and port
# number across SIGUSR1 or --ping-restart restarts.
persist-remote-ip

# Allow remote peer to change its IP 
# address and/or port number,such as due to DHCP
float
